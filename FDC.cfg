[gcode_macro _FDC]
variable_z_height_temps: {39.5: 0.00010572980944024334, 39.6: -9.568938854049799e-05, 39.7: -9.464292499440549e-05, 39.8: -9.360771472985809e-05, 39.9: -9.258369069369319e-05, 40.0: -9.157078592903487e-05, 40.1: -9.056893357529342e-05, 40.2: -8.957806686816567e-05, 40.3: -8.859811913963485e-05, 40.4: -8.762902381797134e-05, 40.5: -8.66707144277308e-05, 40.6: -8.572312458975627e-05, 40.7: -8.478618802117751e-05, 40.8: -8.385983853540922e-05, 40.9: -8.294401004215433e-05, 41.0: -8.20386365474018e-05, 41.1: -8.114365215342598e-05, 41.2: -8.025899105878944e-05, 41.3: -7.938458755833992e-05, 41.4: -7.852037604321165e-05, 41.5: -7.766629100082597e-05, 41.6: -7.682226701489115e-05, 41.7: -7.59882387654006e-05, 41.8: -7.516414102863513e-05, 41.9: -7.434990867716089e-05, 42.0: -7.35454766798327e-05, 42.1: -7.275078010178992e-05, 42.2: -7.196575410445835e-05, 42.3: -7.119033394555226e-05, 42.4: -7.04244549790704e-05, 42.5: -6.966805265529868e-05, 42.6: -6.892106252080928e-05, 42.7: -6.81834202184606e-05, 42.8: -6.745506148739949e-05, 42.9: -6.673592216305691e-05, 43.0: -6.602593817715049e-05, 43.1: -6.532504555768672e-05, 43.2: -6.463318042895447e-05, 43.3: -6.395027901153318e-05, 43.4: -6.327627762228684e-05, 43.5: -6.261111267436654e-05, 43.6: -6.195472067720706e-05, 43.7: -6.13070382365355e-05, 43.8: -6.066800205435999e-05, 43.9: -6.0037548928977124e-05, 44.0: -5.941561575497018e-05, 44.1: -5.880213952320912e-05, 44.2: -5.819705732084974e-05, 44.3: -5.760030633133453e-05, 44.4: -5.701182383439224e-05, 44.5: -5.643154720603831e-05, 44.6: -5.585941391857618e-05, 44.7: -5.529536154059251e-05, 44.8: -5.47393277369624e-05, 44.9: -5.419125026884762e-05, 45.0: -5.3651066993697094e-05, 45.1: -5.311871586524209e-05, 45.2: -5.259413493350837e-05, 45.3: -5.2077262344797995e-05, 45.4: -5.1568036341709256e-05, 45.5: -5.106639526311803e-05, 45.6: -5.057227754419469e-05, 45.7: -5.0085621716390236e-05, 45.8: -4.96063664074467e-05, 45.9: -4.913445034138847e-05, 46.0: -4.866981233852662e-05, 46.1: -4.821239131546414e-05, 46.2: -4.7762126285084625e-05, 46.3: -4.73189563565601e-05, 46.4: -4.68828207353493e-05, 46.5: -4.645365872319677e-05, 46.6: -4.6031409718135484e-05, 46.7: -4.561601321448165e-05, 46.8: -4.520740880284164e-05, 46.9: -4.4805536170105034e-05, 47.0: -4.441033509944986e-05, 47.1: -4.402174547034083e-05, 47.2: -4.363970725852675e-05, 47.3: -4.3264160536043116e-05, 47.4: -4.2895045471219063e-05, 47.5: -4.253230232865741e-05, 47.6: -4.2175871469261536e-05, 47.7: -4.182569335020765e-05, 47.8: -4.148170852496993e-05, 47.9: -4.1143857643301425e-05, 48.0: -4.08120814512445e-05, 48.1: -4.0486320791128204e-05, 48.2: -4.0166516601570015e-05, 48.3: -3.9852609917468904e-05, 48.4: -3.9544541870012266e-05, 48.5: -3.92422536866794e-05, 48.6: -3.8945686691225015e-05, 48.7: -3.8654782303702666e-05, 48.8: -3.836948204044219e-05, 48.9: -3.808972751406618e-05, 49.0: -3.781546043348134e-05, 49.1: -3.754662260388106e-05, 49.2: -3.7283155926746275e-05, 49.3: -3.70250023998403e-05, 49.4: -3.677210411722094e-05, 49.5: -3.6524403269223155e-05, 49.6: -3.6281842142474666e-05, 49.7: -3.604436311988989e-05, 49.8: -3.581190868066474e-05, 49.9: -3.558442140028442e-05, 50.0: -3.536184395052343e-05, 50.1: -3.514411909943775e-05, 50.2: -3.4931189711373545e-05, 50.3: -3.4722998746961053e-05, 50.4: -3.451948926311895e-05, 50.5: -3.432060441305e-05, 50.6: -3.4126287446247135e-05, 50.7: -3.3936481708485636e-05, 50.8: -3.3751130641830086e-05, 50.9: -3.3570177784630895e-05, 51.0: -3.339356677152256e-05, 51.1: -3.322124133343235e-05, 51.2: -3.305314529756555e-05, 51.3: -3.288922258741934e-05, 51.4: -3.27294172227776e-05, 51.5: -3.2573673319710034e-05, 51.6: -3.2421935090568704e-05, 51.7: -3.227414684399844e-05, 51.8: -3.2130252984927284e-05, 51.9: -3.199019801456912e-05, 52.0: -3.185392653042539e-05, 52.1: -3.172138322628682e-05, 52.2: -3.159251289222391e-05, 52.3: -3.146726041459904e-05, 52.4: -3.134557077605956e-05, 52.5: -3.122738905554038e-05, 52.6: -3.11126604282605e-05, 52.7: -3.1001330165726475e-05, 52.8: -3.0893343635732436e-05, 52.9: -3.078864630235746e-05, 53.0: -3.068718372596733e-05, 53.1: -3.0588901563217974e-05, 53.2: -3.0493745567042492e-05, 53.3: -3.040166158667281e-05, 53.4: -3.0312595567617145e-05, 53.5: -3.0226493551673873e-05, 53.6: -3.014330167693327e-05, 53.7: -3.0062966177759297e-05, 53.8: -2.9985433384815616e-05, 53.9: -2.9910649725043044e-05, 54.0: -2.98385617216769e-05, 54.1: -2.9769115994231383e-05, 54.2: -2.970225925851e-05, 54.3: -2.963793832660381e-05, 54.4: -2.9576100106894036e-05, 54.5: -2.951669160403559e-05, 54.6: -2.946002174704105e-05, 54.7: -2.940459042092506e-05, 54.8: -2.9352515887535666e-05, 54.9: -2.9302298224468705e-05, 55.0: -2.9254246745870523e-05, 55.1: -2.920830903412313e-05, 55.2: -2.9164432767900435e-05, 55.3: -2.9122565722151765e-05, 55.4: -2.9082655768121815e-05, 55.5: -2.9044650873341973e-05, 55.6: -2.9008499101616445e-05, 55.7: -2.8974148613056944e-05, 55.8: -2.8941547664048002e-05, 55.9: -2.8910644607259978e-05, 56.0: -2.8881387891659463e-05, 56.1: -2.8853726062486734e-05, 56.2: -2.8827607761284374e-05, 56.3: -2.880298172586171e-05, 56.4: -2.8779796790332976e-05, 56.5: -2.8758001885089562e-05, 56.6: -2.8737546036808684e-05, 56.7: -2.8718378368458586e-05, 56.8: -2.870044809928987e-05, 56.9: -2.8683704544844174e-05, 57.0: -2.8668097116942015e-05, 57.1: -2.8653575323701885e-05, 57.2: -2.864008876951943e-05, 57.3: -2.862758715507091e-05, 57.4: -2.861602027734271e-05, 57.5: -2.8605338029582747e-05, 57.6: -2.859549040133691e-05, 57.7: -2.8586427478436913e-05, 57.8: -2.8578099443003768e-05, 57.9: -2.8570456573430436e-05, 58.0: -2.856344924441652e-05, 58.1: -2.855702792693704e-05, 58.2: -2.8551143188252845e-05, 58.3: -2.854574569191408e-05, 58.4: -2.8540786197760182e-05, 58.5: -2.853621556190948e-05, 58.6: -2.85319847367696e-05, 58.7: -2.8528044771042663e-05, 58.8: -2.8524346809704476e-05, 58.9: -2.8520842094025348e-05, 59.0: -2.851748196156488e-05, 59.1: -2.8514217846158096e-05, 59.2: -2.8511001277929313e-05, 59.3: -2.8507783883311225e-05, 59.4: -2.850451738498419e-05, 59.5: -2.8501153601947354e-05, 59.6: -2.8497644449466605e-05, 59.7: -2.8493941939105802e-05, 59.8: -2.84899981787181e-05, 59.9: -2.8485765372430333e-05, 60.0: -2.8481195820656904e-05, 60.1: -2.8476241920118855e-05, 60.2: -2.8470856163793565e-05, 60.3: -2.846499114096679e-05, 60.4: -2.8458599537208376e-05, 60.5: -2.8451634134363593e-05, 60.6: -2.844404781057741e-05, 60.7: -2.8435793540265014e-05, 60.8: -2.8426824394149966e-05, 60.9: -2.841709353922084e-05, 61.0: -2.8406554238767645e-05, 61.1: -2.8395159852362753e-05, 61.2: -2.8382863835852215e-05, 61.3: -2.8369619741399135e-05, 61.4: -2.8355381217416015e-05, 61.5: -2.8340102008627202e-05, 61.6: -2.8323735956041138e-05, 61.7: -2.8306236996933007e-05, 61.8: -2.8287559164898515e-05, 61.9: -2.8267656589789705e-05, 62.0: -2.8246483497747915e-05, 62.1: -2.8223994211228065e-05, 62.2: -2.8200143148936208e-05, 62.3: -2.8174884825888508e-05, 62.4: -2.8148173853380018e-05, 62.5: -2.8119964938989883e-05, 62.6: -2.8090212886590013e-05, 62.7: -2.8058872596331205e-05, 62.8: -2.8025899064653553e-05, 62.9: -2.799124738429165e-05, 63.0: -2.7954872744257245e-05, 63.1: -2.791673042984097e-05, 63.2: -2.787677582264357e-05, 63.3: -2.783496440053254e-05, 63.4: -2.7791251737666403e-05, 63.5: -2.7745593504498178e-05, 63.6: -2.76979454677459e-05, 63.7: -2.7648263490455058e-05, 63.8: -2.7596503531903196e-05, 63.9: -2.754262164770052e-05, 64.0: -2.7486573989720514e-05, 64.1: -2.7428316806127687e-05, 64.2: -2.7367806441374112e-05, 64.3: -2.730499933620463e-05, 64.4: -2.7239852027634293e-05, 64.5: -2.7172321148979592e-05, 64.6: -2.7102363429839377e-05, 64.7: -2.7029935696091384e-05, 64.8: -2.695499486991826e-05, 64.9: -2.687749796976245e-05, 65.0: -2.6797402110376525e-05, 65.1: -2.67146645027954e-05, 65.2: -2.6629242454324215e-05, 65.3: -2.6541093368571272e-05, 65.4: -2.645017474543071e-05, 65.5: -2.635644418107208e-05, 65.6: -2.6259859367959437e-05, 65.7: -2.616037809483919e-05, 65.8: -2.605795824675919e-05, 65.9: -2.595255780502362e-05, 66.0: -2.5844134847257186e-05, 66.1: -2.5732647547344403e-05, 66.2: -2.561805417546255e-05, 66.3: -2.550031309810248e-05, 66.4: -2.5379382777988846e-05, 66.5: -2.525522177418936e-05, 66.6: -2.5127788742005525e-05, 66.7: -2.4997042433078445e-05, 66.8: -2.4862941695279542e-05, 66.9: -2.472544547282504e-05, 67.0: -2.4584512806159753e-05, 67.1: -2.4440102832068086e-05, 67.2: -2.4292174783582116e-05, 67.3: -2.4140687990037088e-05, 67.4: -2.3985601877054077e-05, 67.5: -2.382687596653825e-05, 67.6: -2.3664469876675392e-05, 67.7: -2.3498343321959672e-05, 67.8: -2.332845611314506e-05, 67.9: -2.315476815728003e-05, 68.0: -2.297723945770408e-05, 68.1: -2.2795830114058155e-05, 68.2: -2.261050032222045e-05, 68.3: -2.242121037442958e-05, 68.4: -2.2227920659137132e-05, 68.5: -2.203059166112388e-05, 68.6: -2.1829183961446022e-05, 68.7: -2.1623658237457724e-05, 68.8: -2.1413975262771223e-05, 68.9: -2.120009590731234e-05, 69.0: -2.0981981137285777e-05, 69.1: -2.0759592015173398e-05, 69.2: -2.053288969976197e-05, 69.3: -2.0301835446105004e-05, 69.4: -2.006639060555919e-05, 69.5: -1.982651662573061e-05, 69.6: -1.9582175050599643e-05, 69.7: -1.9333327520312804e-05}

variable_last_trams: {'stepper_z': 0, 'stepper_z1': 0, 'stepper_z2': 0, 'stepper_z3': 0}
variable_z_trams_temps: {'stepper_z': {}, 'stepper_z1': {}, 'stepper_z2': {}, 'stepper_z3': {}}
variable_enable_tram: 0

variable_temp_min: 39.5
variable_temp_max: 69.7
variable_step: 0.1
variable_precision: 1

############################ DO NOT CHANGE ANYTHING BELOW UNLESS YOU KNOW WHAT YOU ARE DOING ####################################
variable_enable: 1
variable_thermistor_name: "z_thermal_adjust"
variable_last_temp: 0
variable_last_temp_range: []
gcode:
    {% set current_temp = params.CURRENT_TEMP|float %}
    {% set ref_temp = params.REF_TEMP|float %}

    {% set precision = printer["gcode_macro _FDC"].precision %}
    {% set step = printer["gcode_macro _FDC"].step %}

    {% set temp_min = printer["gcode_macro _FDC"].temp_min %}
    {% set temp_max = printer["gcode_macro _FDC"].temp_max %}

    {% if temp_min <= ref_temp <= temp_max and temp_min <= current_temp <= temp_max and current_temp != ref_temp %}
        {% set range_start = (ref_temp * (10 ** precision))|int %}
        {% set range_end = (current_temp * (10 ** precision))|int %}
        {% set range_step = (step * (10 ** precision))|int %}

        {% if range_start > range_end %}
            {% set range_step = range_step * -1 %}
        {% endif %}

        {% set temp_range = namespace(value=[]) %}
        {% for i in range(range_start,range_end + range_step, range_step) %}
            # This is how you append to a list in jinja2 with a namespace...yes...
            {% set temp_range.value = temp_range.value + [i / (10**precision)] %}
        {% endfor %}

        # note to self: can't have a space between the var and value (i.e Malformed command)
        # also for complex types like list and dict you need quotes
        SET_GCODE_VARIABLE MACRO=_FDC VARIABLE=last_temp VALUE={current_temp}
        SET_GCODE_VARIABLE MACRO=_FDC VARIABLE=last_temp_range VALUE="{temp_range.value}"

        {% if printer["gcode_macro _FDC"].enable_tram %}
            _TILT_AND_LOAD_MESH CURRENT_TEMP={current_temp} REF_TEMP={ref_temp}
        {% else %}
            BED_MESH_PROFILE LOAD={current_temp}
            _Z_HEIGHT_ADJUST CURRENT_TEMP={current_temp} REF_TEMP={ref_temp}
        {% endif %}

    {% elif ref_temp != 0 and (ref_temp > temp_max or ref_temp < temp_min) %}
        { action_raise_error("ref_temp or current_temp is out of range "~ref_temp~", "~current_temp) }

    {% endif %}

[gcode_macro _Z_HEIGHT_ADJUST]
variable_last_coeff: 0
gcode:
    {% set total_mm= namespace(value=0) %}
    {% set temp_coeff = namespace(value=0) %}

    {% for temp in printer["gcode_macro _FDC"].last_temp_range %}
        {% set total_mm.value = total_mm.value + printer["gcode_macro _FDC"].z_height_temps[temp|float] %}
    {% endfor %}

    # we take the temp diff abs because the z_thermal_adjust will handle the signs
    # the temp_coeff should be low temp to high temp, it will handle the reverse
    {% set temp_coeff.value = total_mm.value / (params.CURRENT_TEMP|float - params.REF_TEMP|float)|abs %}

    #there is a bug in the comparison of this two floats
    #coudln't for the life of me understand why, so I compare them as strings
    {% if last_coeff|string != temp_coeff.value|string %}
        SET_GCODE_VARIABLE MACRO=_Z_HEIGHT_ADJUST VARIABLE=last_coeff VALUE={temp_coeff.value}
        SET_Z_THERMAL_ADJUST TEMP_COEFF={ temp_coeff.value }
    {% endif %}


[gcode_macro _TILT_AND_LOAD_MESH]
gcode:
    {% if printer["gcode_macro _FDC"].enable_tram %}
        {% if ('applied' in printer.quad_gantry_level and printer.quad_gantry_level.applied) or ('applied' in printer.z_tilt and printer.z_tilt.applied) %}
            {% set current_temp = params.CURRENT_TEMP|float %}
            {% set ref_temp = params.REF_TEMP|float %}

            {% set total_mm= namespace() %}
            {% set total_mm.sign= 1 %}
            {% set total_mm.value= dict() %}
            {% set total_mm.diff= dict() %}
            {% set total_mm.macro_string= "" %}

            {% if current_temp < ref_temp %}
                # If temps are going up we also need to flip the sign
                # to un-tilt the bed mesh (from a the flat position to the reverse tilt position)
                {% set total_mm.sign=-1 %}
            {% endif %}

            {% for stepper, offset in printer["gcode_macro _FDC"].z_trams_temps.items() %}
                {% set _=total_mm.value.__setitem__(stepper, 0) %}
                {% for temp in printer["gcode_macro _FDC"].last_temp_range %}
                    # This is how you set and add an item to a dict in jinja2 with a namespace...yes...
                    {% set _=total_mm.value.__setitem__(stepper,total_mm.value.__getitem__(stepper) + offset[temp|float]) %}
                {% endfor %}
                {% set _=total_mm.value.__setitem__(stepper, total_mm.value.__getitem__(stepper) * total_mm.sign) %}

                # Subtract from the ref temp offset
                # We need to subtract it because this is Z=0 for all steppers
                #{% set _=total_mm.diff.__setitem__(stepper, total_mm.value.__getitem__(stepper) - offset[ref_temp]) %}
            {% endfor %}

            SET_GCODE_VARIABLE MACRO=_FDC variable=last_trams value="{total_mm.value}"

            {% for stepper, stepper_total_mm in total_mm.value.items() %}
                {% set total_mm.macro_string=total_mm.macro_string ~ stepper ~ '=' ~ stepper_total_mm  ~ ' ' %}
            {% endfor %}
            # { action_respond_info("TILT_AND_LOAD String %s" % (total_mm.macro_string)) }
            BED_MESH_PROFILE TILT_AND_LOAD={current_temp} CURRENT_TEMP={current_temp} REF_TEMP={ref_temp} {total_mm.macro_string}
        {% else %}
             {action_respond_info("Tram enabled but the bed is not trammed!")}
        {% endif %}
    {% else %}
         {action_respond_info("TILT_AND_LOAD_MESH called but it's not enabled")}
    {% endif %}


[delayed_gcode RUN_FDC]
initial_duration: 1
gcode:
  {% if printer["gcode_macro _FDC"].temp_min|float == 0.0 or printer["gcode_macro _FDC"].temp_max|float == 999.9  %}
    { action_respond_info("FDC disabled: Stock temperature values present! Modify the config to reflect your own values and restart!") }

  {% elif printer["gcode_macro _FDC"].z_height_temps.999 is defined and printer["gcode_macro _FDC"].z_height_temps.0 == 999 %}
    { action_respond_info("FDC disabled: Stock z heights values present! Modify the config to reflect your own values and restart!") }

  {% elif printer["gcode_macro _FDC"].enable_tram and 'z_tilt' in printer and printer["gcode_macro _FDC"].z_trams_temps.keys()|length != 3 %}
    { action_respond_info("FDC disabled: z_tilt require 3 z steppers to be defined in variable_z_trams_temps!") }

  {% elif printer["gcode_macro _FDC"].enable_tram and 'quad_gantry_level' in printer and printer["gcode_macro _FDC"].z_trams_temps.keys()|length != 4 %}
    { action_respond_info("FDC disabled: quad_gantry_level require 4 z steppers to be defined in variable_z_trams_temps!") }

  {% elif printer["gcode_macro _FDC"].enable_tram and 'z_tilt' in printer and printer["gcode_macro _FDC"].last_trams.keys()|length != 3 %}
    { action_respond_info("FDC disabled: z_tilt require 3 z steppers to be defined variable_last_trams(init to zero)!") }

  {% elif printer["gcode_macro _FDC"].enable_tram and 'quad_gantry_level' in printer and printer["gcode_macro _FDC"].last_trams.keys()|length != 4 %}
    { action_respond_info("FDC disabled: quad_gantry_level require 4 z steppers to be defined in variable_last_trams(init to zero)!") }

  {% else %}
    UPDATE_DELAYED_GCODE ID=RUN_FDC DURATION=10
    {% if printer["gcode_macro _FDC"].enable %}
        {% set precision = printer["gcode_macro _FDC"].precision %}
        {% set step = printer["gcode_macro _FDC"].step %}

        # Rounding current_temp and ref_temp to the step with precision in order to not be affected by small changes
        # This will also improve temp_coeff fluctuation
        {% set ref_temp = printer.z_thermal_adjust.z_adjust_ref_temperature %}
        {% set ref_temp=(ref_temp / step)|round(0) %}
        {% set ref_temp=(ref_temp * step)|round(precision) %}

        {% set current_temp = printer[printer["gcode_macro _FDC"].thermistor_name].temperature|float %}
        {% set current_temp=(current_temp / step)|round(0) %}
        {% set current_temp=(current_temp * step)|round(precision) %}

        {% set last_temp = printer["gcode_macro _FDC"].last_temp %}

        #change the mesh only if it's needed, we don't want to spam klipper with gcodes
        {% if printer.virtual_sdcard.is_active == True and last_temp != current_temp %}
            _FDC CURRENT_TEMP={current_temp} REF_TEMP={ref_temp}
        {% elif printer.virtual_sdcard.is_active == False and last_temp != 0 %}
            {% set last_temp_range_empty=[] %}
            {% set total_mm= namespace() %}
            {% set total_mm.value= dict() %}
            {% for stepper, offset in printer["gcode_macro _FDC"].z_trams_temps.items() %}
                {% set _=total_mm.value.__setitem__(stepper, 0) %}
            {% endfor %}
            # reset the state vars
            SET_GCODE_VARIABLE MACRO=_FDC VARIABLE=last_temp VALUE=0
            SET_GCODE_VARIABLE MACRO=_FDC VARIABLE=last_temp_range VALUE="{last_temp_range_empty}"
            SET_GCODE_VARIABLE MACRO=_FDC variable=last_trams value="{total_mm.value}"
            { action_respond_info("FDC: Resting state vars!\nlast_temp: %s to: %s\nlast_temp_range: %s to: %s\nlast_trams: %s to: %s" % (last_temp, 0, printer["gcode_macro _FDC"].last_temp_range, last_temp_range_empty, printer["gcode_macro _FDC"].last_trams, total_mm.value)) }
        {% endif %}
    {% endif %}
  {% endif %}

[gcode_macro SET_FDC]
gcode:
    #get current state if not provided by params
    {% set ENABLE = params.ENABLE|default(printer["gcode_macro _FDC"].enable)|string %}
    #input checks
    {% if ENABLE == "0" or ENABLE == "1" %}
      {% set enabled = printer["gcode_macro _FDC"].enable %} #current enable status

      {% if not enabled|int == ENABLE|int %}
        SET_GCODE_VARIABLE MACRO=_FDC VARIABLE=enable VALUE={ENABLE}
      {% endif %}
      QUERY_FDC
    {% else %}
      { action_respond_info("Invalid parameter ENABLE value '%s' - must be 0 or 1" % (ENABLE|int)) }
    {% endif %}

[gcode_macro QUERY_FDC]
gcode:
    {% set enabled = printer["gcode_macro _FDC"].enable %}
    {% set last_temp = printer["gcode_macro _FDC"].last_temp %}
    {% set current_mesh = printer.bed_mesh.profile_name %}
    {% set current_temp_coeff = printer["gcode_macro _FDC"].last_coeff %}
    {% set current_last_trams = printer["gcode_macro _FDC"].last_trams %}
    {% set current_z_adjust = printer.z_thermal_adjust.current_z_adjust %}
    {% set ref_temp = printer.z_thermal_adjust.z_adjust_ref_temperature %}
    { action_respond_info("FDC: \n Enabled: %s \n Last temp: %s C \n Mesh profile loaded: %s \n current temp coeff: %s \n current last trams: %s \n current z adjust: %s \n ref_temp: %s" % (enabled, last_temp, current_mesh, current_temp_coeff, current_last_trams, current_z_adjust, ref_temp)) }
